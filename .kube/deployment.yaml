---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: __APP_NAME__-__ENVIRONMENT__
  namespace: __NAMESPACE__
  labels:
    app: __APP_NAME__
    ref: __ENVIRONMENT__
    track: stable
spec:
  replicas: 1
  selector:
    matchLabels:
      app: __APP_NAME__
      ref: __ENVIRONMENT__
  template:
    metadata:
      labels:
        app: __APP_NAME__
        ref: __ENVIRONMENT__
        track: stable
    spec:
      containers:
        - name: app
          image: __REGISTRY_IMAGE__:__REGISTRY_VERSION__
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              protocol: TCP
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 3
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 3
            timeoutSeconds: 2
      imagePullSecrets:
        - name: docker-cfg

---

apiVersion: v1
kind: Service
metadata:
  name: __APP_NAME__-__ENVIRONMENT__
  namespace: __NAMESPACE__
  labels:
    app: __APP_NAME__
    ref: __ENVIRONMENT__
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
  selector:
    app: __APP_NAME__
    ref: __ENVIRONMENT__

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: __APP_NAME__-__ENVIRONMENT__
  namespace: __NAMESPACE__
  labels:
    app: __APP_NAME__
    ref: __ENVIRONMENT__
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: __HOST__
      http:
        paths:
          - path: /
            backend:
              serviceName: __APP_NAME__-__ENVIRONMENT__
              servicePort: 80
